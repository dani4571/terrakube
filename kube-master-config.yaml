#cloud-config
write_files:
  - path: /etc/resolv.conf
    permissions: 0644
    owner: root
    content: |
      nameserver 8.8.8.8


coreos:
  units:
    - name: kube-apiserver.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes API Server
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=network-online.target
        Requires=network-online.target
        After=download-release.service
        Requires=download-release.service
        [Service]
        ExecStart=/opt/bin/kube-apiserver \
        --address=127.0.0.1 \
        --cloud_provider=rackspace \
        --cloud_config=/etc/cloud.conf \
        --etcd_servers=http://127.0.0.1:4001 \
        --logtostderr=true \
        --port=8080 \
        --service-cluster-ip-range=SERVICE_CLUSTER_IP_RANGE \
        --token-auth-file=/var/lib/kube-apiserver/known_tokens.csv \
        --v=2
        Restart=always
        RestartSec=5
    - name: apiserver-advertiser.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Apiserver Advertiser
        After=etcd.service
        Requires=etcd.service
        After=master-apiserver.service
        [Service]
        ExecStart=/bin/sh -c 'etcdctl set /corekube/apiservers/$public_ipv4 $public_ipv4'
        Restart=always
        RestartSec=120
    - name: kube-controller-manager.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Controller Manager
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=network-online.target
        Requires=network-online.target
        After=kube-apiserver.service
        Requires=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/ln -sf /opt/kubernetes/server/bin/kube-controller-manager /opt/bin/kube-controller-manager
        ExecStart=/opt/bin/kube-controller-manager \
        --cloud_provider=rackspace \
        --cloud_config=/etc/cloud.conf \
        --logtostderr=true \
        --master=127.0.0.1:8080 \
        --v=2
        Restart=always
        RestartSec=5
    - name: kube-scheduler.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Scheduler
        Documentation=https://github.com/GoogleCloudPlatform/kubernetes
        After=network-online.target
        Requires=network-online.target
        After=kube-apiserver.service
        Requires=kube-apiserver.service
        [Service]
        ExecStartPre=/usr/bin/ln -sf /opt/kubernetes/server/bin/kube-scheduler /opt/bin/kube-scheduler
        ExecStart=/opt/bin/kube-scheduler \
        --logtostderr=true \
        --master=127.0.0.1:8080
        Restart=always
        RestartSec=5
    #Running nginx service with --net="host" is a necessary evil until running all k8s services in docker.
    - name: kubernetes-nginx.service
      command: start
      content: |
        [Unit]
        Description=Kubernetes Nginx Service
        After=network-online.target
        Requires=network-online.target
        After=docker.service
        Requires=docker.service
        [Service]
        ExecStartPre=/opt/bin/git-kubernetes-nginx.sh
        ExecStartPre=-/usr/bin/docker rm kubernetes_nginx
        ExecStart=/usr/bin/docker run --rm --net="host" -p "443:443" -t --name "kubernetes_nginx" kubernetes_nginx
        ExecStop=/usr/bin/docker stop kubernetes_nginx
        Restart=always
        RestartSec=15
